// <auto-generated />
using System;
using Application_GS_ecole.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationGSecole.Migrations
{
    [DbContext(typeof(Mvcecolecontext))]
    partial class MvcecolecontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application_GS_ecole.Models.Admin", b =>
                {
                    b.Property<Guid>("Id_Admin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Admin");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Application_GS_ecole.Models.Cours", b =>
                {
                    b.Property<Guid>("Id_cours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_cours");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("Application_GS_ecole.Models.Etudiant", b =>
                {
                    b.Property<Guid>("Id_Etudiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Cours")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Etudiant");

                    b.HasIndex("Id_Cours");

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("Application_GS_ecole.Models.Prof", b =>
                {
                    b.Property<Guid>("Id_Prof")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Cours")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Prof");

                    b.HasIndex("Id_Cours");

                    b.ToTable("Profs");
                });

            modelBuilder.Entity("Application_GS_ecole.Models.Etudiant", b =>
                {
                    b.HasOne("Application_GS_ecole.Models.Cours", "cours")
                        .WithMany()
                        .HasForeignKey("Id_Cours")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cours");
                });

            modelBuilder.Entity("Application_GS_ecole.Models.Prof", b =>
                {
                    b.HasOne("Application_GS_ecole.Models.Cours", "Cours")
                        .WithMany()
                        .HasForeignKey("Id_Cours")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cours");
                });
#pragma warning restore 612, 618
        }
    }
}
